#pragma kernel Postprocess

// 
// 1st postprocessor (bounding box aggregation)
//

#include "Common.hlsl"

// Input uniforms
Texture2D<float> _Scores;
RWStructuredBuffer<uint> _InputCount;
RWStructuredBuffer<Detection> Output;

float _ImageSize;
float _Threshold;

// Output uniforms
//AppendStructuredBuffer<EmotionDetection> _Output;

[numthreads(1, 1, 1)]
void Postprocess(uint3 id : SV_DispatchThreadID){

    Debug.Log(Output);


}

// // First layer: 8-pixel stride, two anchors
// #define CELLS_IN_ROW 16
// #define ANCHOR_COUNT 2
// #define INDEX_OFFSET 384
// #define KERNEL_NAME PostprocessLayer1
// #include "PostprocessKernel.hlsl"

// #undef CELLS_IN_ROW
// #undef ANCHOR_COUNT
// #undef KERNEL_NAME
// #undef INDEX_OFFSET

// // Second layer: 16-pixel stride, six anchors
// #define CELLS_IN_ROW 8
// #define ANCHOR_COUNT 6
// #define INDEX_OFFSET 0
// #define KERNEL_NAME PostprocessLayer2
// #include "PostprocessKernel.hlsl"
